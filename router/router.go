package router

import (
	"golang-jwt-auth/controllers"
	"golang-jwt-auth/middlewares"
	"net/http"

	"github.com/gin-gonic/gin"

	_ "golang-jwt-auth/docs" // docs is generated by Swag CLI, you have to import it.

	ginSwagger "github.com/swaggo/gin-swagger"

	swaggerfiles "github.com/swaggo/files"
)

// @title JWT Product CRUD API with Authentication and Authorization
// @version 1.0
// @description This is a simple service for managing products by admin and users
// @termsOfService http://swagger.io/terms/
// @contact.name API Support
// @contact.email soberkoder@swagger.io
// @license.name Apache 2.0
// @license.url http://www.apache.org/licenses/LICENSE-2.0.html
// @host localhost:8080
// @BasePath /
func StartApp() *gin.Engine {
	r := gin.Default()

	// Read homepage content
	r.GET("/", func(c *gin.Context) {
		c.JSON(http.StatusOK, "Iki dikembangke ambek guntur wkwk")
	})

	r.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerfiles.Handler))

	userRouter := r.Group("/users")
	{
		// Register user
		userRouter.POST("/register", controllers.UserRegister)

		// Login user
		userRouter.POST("/login", controllers.UserLogin)
	}

	productRouter := r.Group("/products")
	{
		// Authenticate user
		productRouter.Use(middlewares.Authentication())

		// Post product
		productRouter.POST("/", controllers.CreateProduct)

		// Get all products
		productRouter.GET("/", middlewares.ProductAuthorizationAll(), controllers.GetProducts)

		// Get product by id
		productRouter.GET("/:productId", middlewares.ProductAuthorization(), controllers.GetProduct)

		// Update product by id
		productRouter.PUT("/:productId", middlewares.ProductAuthorization(), controllers.UpdateProduct)

		// Delete product by id
		productRouter.DELETE("/:productId", middlewares.ProductAuthorization(), controllers.DeleteProduct)
	}

	return r
}
